services:
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    ports:
      - "3000:3000"
    networks:
      - web

  # postgres:
  #   container_name: backend_postgres
  #   image: postgres:17
  #   restart: always
  #   environment:
  #     POSTGRES_USER: strapi
  #     POSTGRES_PASSWORD: strapi
  #     POSTGRES_DB: strapi
  #   volumes:
  #     - pg_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "strapi"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - web

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    networks:
      - web

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - web

  certbot:
    image: neilpang/acme.sh
    container_name: acme_certbot
    volumes:
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/acme.sh

# volumes:
#   pg_data:

networks:
  web:
    driver: bridge
